package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.72

import (
	"context"
	"log"
	"user-graphql-grpc/graphql-server/graph/model"
	pb "user-graphql-grpc/proto"
)

// UserInfo is the resolver for the userInfo field.
func (r *queryResolver) UserInfo(ctx context.Context, userID string) (*model.User, error) {
	log.Printf("GraphQL服务接收到请求: userID = %s", userID)
	
	// 通过gRPC客户端调用gRPC服务
	response, err := r.Resolver.grpcClient.GetUserInfo(ctx, &pb.UserRequest{
		UserId: userID,
	})
	
	if err != nil {
		log.Printf("gRPC调用失败: %v", err)
		return nil, err
	}
	
	// 将gRPC响应转换为GraphQL模型
	return &model.User{
		ID:   response.Id,
		Name: response.Name,
		Age:  int(response.Age),
		Sex:  response.Sex,
	}, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
